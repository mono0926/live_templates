<templateSet group="Flutter">
  <template name="cnst" value="const $NAME$({ Key key }): super(key: key);" description="Const" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="DART" value="true" />
      <option name="DART_STATEMENT" value="false" />
      <option name="DART_TOPLEVEL" value="false" />
    </context>
  </template>
  <template name="stless" value="class $NAME$ extends StatelessWidget {&#10;  const $NAME$({ Key key }): super(key: key);&#10;  @override&#10;  Widget build(BuildContext context) {&#10;    return Container($END$);&#10;  }&#10;}&#10;" description="New Stateless widget" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="stful" value="class $NAME$ extends StatefulWidget {&#10;  const $NAME$({ Key key }): super(key: key);&#10;  @override&#10;  _$NAME$State createState() =&gt; _$NAME$State();&#10;}&#10;&#10;class _$NAME$State extends State&lt;$NAME$&gt; {&#10;  @override&#10;  Widget build(BuildContext context) {&#10;    return Container($END$);&#10;  }&#10;}&#10;" description="New Stateful widget" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="stanim" value="class $NAME$ extends StatefulWidget {&#10;  @override&#10;  _$NAME$State createState() =&gt; _$NAME$State();&#10;}&#10;&#10;class _$NAME$State extends State&lt;$NAME$&gt; with SingleTickerProviderStateMixin {&#10;  AnimationController _controller;&#10;&#10;  @override&#10;  void initState() {&#10;    super.initState();&#10;    _controller = AnimationController(vsync: this);&#10;  }&#10;&#10;  @override&#10;  void dispose() {&#10;    _controller.dispose();&#10;    super.dispose();&#10;  }&#10;  &#10;  @override&#10;  Widget build(BuildContext context) {&#10;    return Container($END$);&#10;  }&#10;}&#10;" description="New Stateful widget with AnimationController" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="rtnm" value="static const routeName = '$TEXT$';" description="" toReformat="false" toShortenFQNames="true">
    <variable name="TEXT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="FLUTTER" value="true" />
    </context>
  </template>
  <template name="flpg" value="import 'package:flutter/material.dart';&#10;&#10;class $NAME$Page extends StatelessWidget {&#10;  const $NAME$Page({ Key key }): super(key: key);&#10;&#10;  static const routeName = '/$NAME_SNAKE$';&#10;&#10;  @override&#10;  Widget build(BuildContext context) {&#10;    return Scaffold($END$);&#10;  }&#10;}&#10;" description="New Page widget" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME_SNAKE" expression="snakeCase(NAME)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="DART_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="clschm" value="final theme = Theme.of(context);&#10;final colorScheme = theme.colorScheme;" description="colorScheme" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="DART_STATEMENT" value="true" />
    </context>
  </template>
  <template name="l10n" value="final l10n = L10n.of(context);" description="l10n" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="DART_STATEMENT" value="true" />
    </context>
  </template>
  <template name="txtthm" value="final textTheme = Theme.of(context).textTheme;" description="textTheme" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="DART_STATEMENT" value="true" />
    </context>
  </template>
  <template name="thm" value="final theme = Theme.of(context);" description="theme" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="DART_STATEMENT" value="true" />
    </context>
  </template>
  <template name="prvchntfr" value="return ChangeNotifierProvider(&#10;  create: (context) =&gt; $Controller$Controller(),&#10;  builder: (context, child) {&#10;    return MultiProvider(&#10;      providers: [&#10;        Provider.value(value: context.select(($Controller$Controller c) =&gt; c.$END$)),&#10;      ],&#10;      child: child,&#10;    );&#10;  },&#10;  child: const $Page$Page._(),&#10;);" description="" toReformat="false" toShortenFQNames="true">
    <variable name="Controller" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="Page" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="DART_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>